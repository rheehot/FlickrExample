// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersionInfo = "30.0.2"
        compileSdkVersionInfo = 30
        targetSdkVersionInfo = 30
        minSdkVerisonInfo = 26

        kotlin_version = '1.4.10'
        coroutines_version = '1.4.1'

        appcompatVersion = '1.2.0'

        materialVersion = '1.2.1'
        constraintLayoutVersion = '2.0.4'

        coreKtxVersion = '1.3.2'
        fragmentKtxVersion = '1.2.5'
        livedataKtxVersion = '2.2.0'
        viewModelKtxVersion = '2.2.0'

        glideVersion = '4.11.0'
        lottieVersion = '3.4.4'

        retrofitVersion='2.9.0'
        okhttpVersion = '4.8.0'

        // test
        junitVersion = '4.13'
        // https://mvnrepository.com/artifact/org.mockito/mockito-core
        // https://developer.android.com/training/testing/unit-testing/local-unit-tests
        mockitoCoreVersion = '3.3.3'
        // https://github.com/awaitility/awaitility
        awaitilityVersion = '4.0.2'

        // ui test
        // https://developer.android.com/training/testing/
        // https://developer.android.com/training/testing/set-up-project
        // // AndroidJUnitRunner and JUnit Rules
        androidxJunitVersion = '1.1.0'
        androidxJunitRunnerVersion = '1.2.0'
        espressoVersion = '3.2.0'
        // uiautomator
        uiautomatorVersion = '2.2.0'


        // Kotlin
        kotlin = "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        kotlinCoroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

        appCompat = "androidx.appcompat:appcompat:$appcompatVersion"

        // ui
        material = "com.google.android.material:material:$materialVersion"
        constraintLayout = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

        // ktx
        coreKtx = "androidx.core:core-ktx:$coreKtxVersion"
        fragmentKtx = "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

        // lifecycle
        lifecycleLiveDataKtx = "androidx.lifecycle:lifecycle-livedata-ktx:$livedataKtxVersion"
        lifecycleViewModelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelKtxVersion"

        // ImageLoad library
        // https://github.com/bumptech/glide
        glide = "com.github.bumptech.glide:glide:$glideVersion"
        glideCompiler = "com.github.bumptech.glide:compiler:$glideVersion"

        // Retrofit API
        retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
        retrofitGson = "com.squareup.retrofit2:converter-gson:$retrofitVersion"

        // OK HTTP
        okhttp = "com.squareup.okhttp3:okhttp:$okhttpVersion"
        oktthLogging = "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

        lottie = "com.airbnb.android:lottie:$lottieVersion"

        // Test
        junit = "junit:junit:$junitVersion"
        mockito = "org.mockito:mockito-core:$mockitoCoreVersion"
        awaitility = "org.awaitility:awaitility:$awaitilityVersion"

        // UI Test
        // Assertions
        uiTestJunit = "androidx.test.ext:junit:$androidxJunitVersion"
        // AndroidJUnitRunner and JUnit Rules
        testRunner = "androidx.test:runner:$androidxJunitRunnerVersion"
        testRules = "androidx.test:rules:$androidxJunitRunnerVersion"
        // Espresso dependencies
        espressoCore = "androidx.test.espresso:espresso-core:$espressoVersion"
        espressoContrib = "androidx.test.espresso:espresso-contrib:$espressoVersion"
        espressoIntents = "androidx.test.espresso:espresso-intents:$espressoVersion"
        // uiautomator
        uiautomator = "androidx.test.uiautomator:uiautomator:$uiautomatorVersion"


        flickrApiKey = "\"3f072c442a389ba9f2bc470d37fdef96\""
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}